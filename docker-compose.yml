services:
  cockroach:
    image: cockroachdb/cockroach:v24.2.0
    command:
      - start-single-node
      - --insecure
      - --listen-addr=localhost:26257     # requerido por v24.x
      - --sql-addr=0.0.0.0:26258          # SQL expuesto (puerto distinto)
      - --http-addr=0.0.0.0:8080          # UI
    ports:
      - "26259:26258"   # host:26259 -> cont:26258 (SQL)
      - "8088:8080"     # host:8088 -> cont:8080 (UI)
    volumes:
      - crdb-data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD", "cockroach", "sql", "--insecure", "--host=127.0.0.1:26258", "-e", "select 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  mongo:
    image: mongo:7.0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 5s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.9
    command:
      - redpanda start
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092
    ports:
      - "9092:9092"   # Kafka API
      - "9644:9644"   # Admin API
    restart: unless-stopped

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.7.2
    environment:
      - KAFKA_BROKERS=redpanda:9092
    ports:
      - "8081:8080"   # UI de tópicos
    depends_on:
      - redpanda
    restart: unless-stopped

  connect:
    build:
      context: ./connect
      dockerfile: Dockerfile
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=redpanda:9092
      - CONNECT_GROUP_ID=connect-cluster

      # REST: escucha y anuncia correctamente
      - CONNECT_REST_PORT=8083
      - CONNECT_LISTENERS=http://0.0.0.0:8083
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
      - CONNECT_REST_ADVERTISED_PORT=8083
      # (opcional/compatible) si lo quieres, puedes dejar también:
      # - CONNECT_REST_ADVERTISED_LISTENERS=http://connect:8083

      # Topics internos + RF=1 (1 broker)
      - CONNECT_CONFIG_STORAGE_TOPIC=_connect_configs
      - CONNECT_OFFSET_STORAGE_TOPIC=_connect_offsets
      - CONNECT_STATUS_STORAGE_TOPIC=_connect_status
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1

      # Converters JSON sin schema
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false

      # Plugins (JDBC / Mongo)
      - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components

      # Logging y memoria
      - CONNECT_LOG4J_LOGGERS=org.reflections=ERROR
      - JAVA_TOOL_OPTIONS=-Xms512m -Xmx1024m
    ports:
      - "8083:8083"
    depends_on:
      - redpanda
      - cockroach
      - mongo
    restart: unless-stopped

volumes:
  crdb-data:
  mongo-data:
